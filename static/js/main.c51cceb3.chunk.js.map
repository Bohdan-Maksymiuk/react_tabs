{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","selectedTabId","onTabSelected","className","map","tab","type","classNames","id","style","boxShadow","onClick","title","find","content","App","state","selectedTab","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sQASaA,EAAwB,SAACC,GAAW,IAAD,EACtCC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,cAE7B,OACE,qCACE,oBAAIC,UAAU,YAAd,SACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,6BACE,wBACEC,KAAK,SACLH,UAAWI,IAAW,SAAU,CAC9B,kBAAmBF,EAAIG,KAAOP,IAEhCQ,MAAO,CAAEC,UAAW,QACpBC,QAAS,kBAAMT,EAAcG,IAN/B,SAQGA,EAAIO,SATAP,EAAIG,SAcjB,qBAAKL,UAAU,MAAf,mBACGH,EAAKa,MAAK,SAAAR,GAAG,OAAIA,EAAIG,KAAOP,YAD/B,aACG,EAA4Ca,cC1B/Cd,EAAc,CAClB,CAAEQ,GAAI,QAASI,MAAO,QAASE,QAAS,eACxC,CAAEN,GAAI,QAASI,MAAO,QAASE,QAAS,eACxC,CAAEN,GAAI,QAASI,MAAO,QAASE,QAAS,gBAOpCC,E,4MACJC,MAAe,CACbC,YAAY,eAAMjB,EAAK,K,EAGzBE,cAAgB,SAACe,GACXA,EAAYT,KAAO,EAAKQ,MAAMC,YAAYT,IAC5C,EAAKU,SAAS,CACZD,iB,4CAKN,WACE,IAAQT,EAAOW,KAAKH,MAAMC,YAAlBT,GAER,OACE,sBAAKL,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAd,gCAEGK,KAEH,cAAC,EAAD,CACER,KAAMA,EACNC,cAAeO,EACfN,cAAeiB,KAAKjB,uB,GAzBZkB,IAAMC,WAgCTN,IC5CfO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c51cceb3.chunk.js","sourcesContent":["import './Tabs.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (selectedTab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = (props) => {\n  const { tabs, selectedTabId, onTabSelected } = props;\n\n  return (\n    <>\n      <ul className=\"tabs-menu\">\n        {tabs.map(tab => (\n          <li key={tab.id}>\n            <button\n              type=\"button\"\n              className={classNames('button', {\n                'button-selected': tab.id === selectedTabId,\n              })}\n              style={{ boxShadow: 'none' }}\n              onClick={() => onTabSelected(tab)}\n            >\n              {tab.title}\n            </button>\n          </li>\n        ))}\n      </ul>\n      <div className=\"box\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype State = {\n  selectedTab: Tab;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedTab: { ...tabs[0] },\n  };\n\n  onTabSelected = (selectedTab: Tab) => {\n    if (selectedTab.id !== this.state.selectedTab.id) {\n      this.setState({\n        selectedTab,\n      });\n    }\n  };\n\n  render() {\n    const { id } = this.state.selectedTab;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title is-2\">\n          Selected tab is&nbsp;\n          {id}\n        </h1>\n        <Tabs\n          tabs={tabs}\n          selectedTabId={id}\n          onTabSelected={this.onTabSelected}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}